// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.28.3
// source: GodQQ/CloudStore/protocol/protocol.proto

package gRPCProto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 用户的信息
type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID uint32 `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_GodQQ_CloudStore_protocol_protocol_proto_rawDescGZIP(), []int{0}
}

func (x *UserInfo) GetUID() uint32 {
	if x != nil {
		return x.UID
	}
	return 0
}

// 一个文件的信息，包含文件的ID
type FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileID uint64 `protobuf:"varint,1,opt,name=FileID,proto3" json:"FileID,omitempty"`
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_GodQQ_CloudStore_protocol_protocol_proto_rawDescGZIP(), []int{1}
}

func (x *FileInfo) GetFileID() uint64 {
	if x != nil {
		return x.FileID
	}
	return 0
}

type FileList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadingFilesID []uint64 `protobuf:"varint,1,rep,packed,name=UploadingFilesID,proto3" json:"UploadingFilesID,omitempty"` //上传的文件ID
}

func (x *FileList) Reset() {
	*x = FileList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileList) ProtoMessage() {}

func (x *FileList) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileList.ProtoReflect.Descriptor instead.
func (*FileList) Descriptor() ([]byte, []int) {
	return file_GodQQ_CloudStore_protocol_protocol_proto_rawDescGZIP(), []int{2}
}

func (x *FileList) GetUploadingFilesID() []uint64 {
	if x != nil {
		return x.UploadingFilesID
	}
	return nil
}

// 上传的文件的信息
type UploadFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID      uint32 `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`          //上传者的UID
	FileName string `protobuf:"bytes,2,opt,name=FileName,proto3" json:"FileName,omitempty"` //上传的文件名称
	MD5      string `protobuf:"bytes,3,opt,name=MD5,proto3" json:"MD5,omitempty"`           //上传的文件的MD5值
	FileID   uint64 `protobuf:"varint,5,opt,name=FileID,proto3" json:"FileID,omitempty"`    //文件的ID，用于判断是不是续传
	FileLen  uint64 `protobuf:"varint,6,opt,name=FileLen,proto3" json:"FileLen,omitempty"`  //文件的长度
}

func (x *UploadFileInfo) Reset() {
	*x = UploadFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileInfo) ProtoMessage() {}

func (x *UploadFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileInfo.ProtoReflect.Descriptor instead.
func (*UploadFileInfo) Descriptor() ([]byte, []int) {
	return file_GodQQ_CloudStore_protocol_protocol_proto_rawDescGZIP(), []int{3}
}

func (x *UploadFileInfo) GetUID() uint32 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *UploadFileInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadFileInfo) GetMD5() string {
	if x != nil {
		return x.MD5
	}
	return ""
}

func (x *UploadFileInfo) GetFileID() uint64 {
	if x != nil {
		return x.FileID
	}
	return 0
}

func (x *UploadFileInfo) GetFileLen() uint64 {
	if x != nil {
		return x.FileLen
	}
	return 0
}

// 上传文件的请求同意后返回的文件信息
type UploadFileInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileID  uint64 `protobuf:"varint,1,opt,name=FileID,proto3" json:"FileID,omitempty"`
	ChunkID uint64 `protobuf:"varint,4,opt,name=ChunkID,proto3" json:"ChunkID,omitempty"` //给定的上传位置
}

func (x *UploadFileInfoRsp) Reset() {
	*x = UploadFileInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileInfoRsp) ProtoMessage() {}

func (x *UploadFileInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileInfoRsp.ProtoReflect.Descriptor instead.
func (*UploadFileInfoRsp) Descriptor() ([]byte, []int) {
	return file_GodQQ_CloudStore_protocol_protocol_proto_rawDescGZIP(), []int{4}
}

func (x *UploadFileInfoRsp) GetFileID() uint64 {
	if x != nil {
		return x.FileID
	}
	return 0
}

func (x *UploadFileInfoRsp) GetChunkID() uint64 {
	if x != nil {
		return x.ChunkID
	}
	return 0
}

// 下载文件的信息
type DownloadFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID    uint32 `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
	FileID uint64 `protobuf:"varint,2,opt,name=FileID,proto3" json:"FileID,omitempty"`
}

func (x *DownloadFileInfo) Reset() {
	*x = DownloadFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileInfo) ProtoMessage() {}

func (x *DownloadFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileInfo.ProtoReflect.Descriptor instead.
func (*DownloadFileInfo) Descriptor() ([]byte, []int) {
	return file_GodQQ_CloudStore_protocol_protocol_proto_rawDescGZIP(), []int{5}
}

func (x *DownloadFileInfo) GetUID() uint32 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *DownloadFileInfo) GetFileID() uint64 {
	if x != nil {
		return x.FileID
	}
	return 0
}

// 下载文件的请求同意后返回的文件信息/
type DownloadFileInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MD5     string `protobuf:"bytes,1,opt,name=MD5,proto3" json:"MD5,omitempty"`
	FileLen uint64 `protobuf:"varint,2,opt,name=FileLen,proto3" json:"FileLen,omitempty"`
}

func (x *DownloadFileInfoRsp) Reset() {
	*x = DownloadFileInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileInfoRsp) ProtoMessage() {}

func (x *DownloadFileInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileInfoRsp.ProtoReflect.Descriptor instead.
func (*DownloadFileInfoRsp) Descriptor() ([]byte, []int) {
	return file_GodQQ_CloudStore_protocol_protocol_proto_rawDescGZIP(), []int{6}
}

func (x *DownloadFileInfoRsp) GetMD5() string {
	if x != nil {
		return x.MD5
	}
	return ""
}

func (x *DownloadFileInfoRsp) GetFileLen() uint64 {
	if x != nil {
		return x.FileLen
	}
	return 0
}

// 上传文件的完成通知
type CompleteInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID      uint32 `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
	FileID   uint64 `protobuf:"varint,2,opt,name=FileID,proto3" json:"FileID,omitempty"`
	Complete uint32 `protobuf:"varint,3,opt,name=complete,proto3" json:"complete,omitempty"` //1为暂停，2为终止，3为完成
}

func (x *CompleteInfo) Reset() {
	*x = CompleteInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteInfo) ProtoMessage() {}

func (x *CompleteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteInfo.ProtoReflect.Descriptor instead.
func (*CompleteInfo) Descriptor() ([]byte, []int) {
	return file_GodQQ_CloudStore_protocol_protocol_proto_rawDescGZIP(), []int{7}
}

func (x *CompleteInfo) GetUID() uint32 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *CompleteInfo) GetFileID() uint64 {
	if x != nil {
		return x.FileID
	}
	return 0
}

func (x *CompleteInfo) GetComplete() uint32 {
	if x != nil {
		return x.Complete
	}
	return 0
}

// 空
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_GodQQ_CloudStore_protocol_protocol_proto_rawDescGZIP(), []int{8}
}

// 已经上传的文件的列表
type UploadedFileList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileID      []uint64 `protobuf:"varint,1,rep,packed,name=FileID,proto3" json:"FileID,omitempty"`
	FileLen     []uint64 `protobuf:"varint,2,rep,packed,name=FileLen,proto3" json:"FileLen,omitempty"`
	FileName    []string `protobuf:"bytes,3,rep,name=FileName,proto3" json:"FileName,omitempty"`
	CreatedTime []string `protobuf:"bytes,4,rep,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
}

func (x *UploadedFileList) Reset() {
	*x = UploadedFileList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadedFileList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadedFileList) ProtoMessage() {}

func (x *UploadedFileList) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadedFileList.ProtoReflect.Descriptor instead.
func (*UploadedFileList) Descriptor() ([]byte, []int) {
	return file_GodQQ_CloudStore_protocol_protocol_proto_rawDescGZIP(), []int{9}
}

func (x *UploadedFileList) GetFileID() []uint64 {
	if x != nil {
		return x.FileID
	}
	return nil
}

func (x *UploadedFileList) GetFileLen() []uint64 {
	if x != nil {
		return x.FileLen
	}
	return nil
}

func (x *UploadedFileList) GetFileName() []string {
	if x != nil {
		return x.FileName
	}
	return nil
}

func (x *UploadedFileList) GetCreatedTime() []string {
	if x != nil {
		return x.CreatedTime
	}
	return nil
}

// 要分享的文件信息
type ShareFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID    uint32 `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
	FileID uint64 `protobuf:"varint,2,opt,name=FileID,proto3" json:"FileID,omitempty"`
}

func (x *ShareFile) Reset() {
	*x = ShareFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFile) ProtoMessage() {}

func (x *ShareFile) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFile.ProtoReflect.Descriptor instead.
func (*ShareFile) Descriptor() ([]byte, []int) {
	return file_GodQQ_CloudStore_protocol_protocol_proto_rawDescGZIP(), []int{10}
}

func (x *ShareFile) GetUID() uint32 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *ShareFile) GetFileID() uint64 {
	if x != nil {
		return x.FileID
	}
	return 0
}

// 分享文件后返回的信息
type ShareFileRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShareID uint64 `protobuf:"varint,1,opt,name=ShareID,proto3" json:"ShareID,omitempty"`
}

func (x *ShareFileRsp) Reset() {
	*x = ShareFileRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFileRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFileRsp) ProtoMessage() {}

func (x *ShareFileRsp) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFileRsp.ProtoReflect.Descriptor instead.
func (*ShareFileRsp) Descriptor() ([]byte, []int) {
	return file_GodQQ_CloudStore_protocol_protocol_proto_rawDescGZIP(), []int{11}
}

func (x *ShareFileRsp) GetShareID() uint64 {
	if x != nil {
		return x.ShareID
	}
	return 0
}

// 返回的分享列表
type ShareListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileID      []uint64 `protobuf:"varint,1,rep,packed,name=FileID,proto3" json:"FileID,omitempty"`
	FileLen     []uint64 `protobuf:"varint,2,rep,packed,name=FileLen,proto3" json:"FileLen,omitempty"`
	FileName    []string `protobuf:"bytes,3,rep,name=FileName,proto3" json:"FileName,omitempty"`
	CreatedTime []string `protobuf:"bytes,4,rep,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	ShareID     []uint64 `protobuf:"varint,5,rep,packed,name=ShareID,proto3" json:"ShareID,omitempty"`
}

func (x *ShareListRsp) Reset() {
	*x = ShareListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareListRsp) ProtoMessage() {}

func (x *ShareListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareListRsp.ProtoReflect.Descriptor instead.
func (*ShareListRsp) Descriptor() ([]byte, []int) {
	return file_GodQQ_CloudStore_protocol_protocol_proto_rawDescGZIP(), []int{12}
}

func (x *ShareListRsp) GetFileID() []uint64 {
	if x != nil {
		return x.FileID
	}
	return nil
}

func (x *ShareListRsp) GetFileLen() []uint64 {
	if x != nil {
		return x.FileLen
	}
	return nil
}

func (x *ShareListRsp) GetFileName() []string {
	if x != nil {
		return x.FileName
	}
	return nil
}

func (x *ShareListRsp) GetCreatedTime() []string {
	if x != nil {
		return x.CreatedTime
	}
	return nil
}

func (x *ShareListRsp) GetShareID() []uint64 {
	if x != nil {
		return x.ShareID
	}
	return nil
}

// 请求获得一个分享id对应的fileid以及其信息
type ShareFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShareID uint64 `protobuf:"varint,1,opt,name=ShareID,proto3" json:"ShareID,omitempty"`
}

func (x *ShareFileInfo) Reset() {
	*x = ShareFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFileInfo) ProtoMessage() {}

func (x *ShareFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFileInfo.ProtoReflect.Descriptor instead.
func (*ShareFileInfo) Descriptor() ([]byte, []int) {
	return file_GodQQ_CloudStore_protocol_protocol_proto_rawDescGZIP(), []int{13}
}

func (x *ShareFileInfo) GetShareID() uint64 {
	if x != nil {
		return x.ShareID
	}
	return 0
}

// 返回的share_id对应的文件信息，用于下载
type ShareFileInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileID   uint64 `protobuf:"varint,1,opt,name=FileID,proto3" json:"FileID,omitempty"`
	FileLen  uint64 `protobuf:"varint,2,opt,name=FileLen,proto3" json:"FileLen,omitempty"`
	FileName string `protobuf:"bytes,3,opt,name=FileName,proto3" json:"FileName,omitempty"`
	FileMD5  string `protobuf:"bytes,4,opt,name=FileMD5,proto3" json:"FileMD5,omitempty"`
}

func (x *ShareFileInfoRsp) Reset() {
	*x = ShareFileInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFileInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFileInfoRsp) ProtoMessage() {}

func (x *ShareFileInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFileInfoRsp.ProtoReflect.Descriptor instead.
func (*ShareFileInfoRsp) Descriptor() ([]byte, []int) {
	return file_GodQQ_CloudStore_protocol_protocol_proto_rawDescGZIP(), []int{14}
}

func (x *ShareFileInfoRsp) GetFileID() uint64 {
	if x != nil {
		return x.FileID
	}
	return 0
}

func (x *ShareFileInfoRsp) GetFileLen() uint64 {
	if x != nil {
		return x.FileLen
	}
	return 0
}

func (x *ShareFileInfoRsp) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ShareFileInfoRsp) GetFileMD5() string {
	if x != nil {
		return x.FileMD5
	}
	return ""
}

var File_GodQQ_CloudStore_protocol_protocol_proto protoreflect.FileDescriptor

var file_GodQQ_CloudStore_protocol_protocol_proto_rawDesc = []byte{
	0x0a, 0x28, 0x47, 0x6f, 0x64, 0x51, 0x51, 0x2f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1c, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x55, 0x49, 0x44, 0x22, 0x22, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x22, 0x36, 0x0a, 0x08,
	0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x44, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x10, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x49, 0x44, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x44, 0x35, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x4d, 0x44, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x6e, 0x22, 0x45, 0x0a, 0x11, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x44,
	0x22, 0x3c, 0x0a, 0x10, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x22, 0x41,
	0x0a, 0x13, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x44, 0x35, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x4d, 0x44, 0x35, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x4c,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x65,
	0x6e, 0x22, 0x54, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x55, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x83, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x46, 0x69, 0x6c,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07,
	0x46, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x35, 0x0a, 0x09, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x22, 0x28, 0x0a,
	0x0c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x44, 0x22, 0x99, 0x01, 0x0a, 0x0c, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x49, 0x44, 0x18, 0x05, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x49, 0x44, 0x22, 0x29, 0x0a, 0x0d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x44, 0x22, 0x7a,
	0x0a, 0x10, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x69,
	0x6c, 0x65, 0x4c, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x46, 0x69, 0x6c,
	0x65, 0x4c, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x44, 0x35, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x44, 0x35, 0x32, 0xc4, 0x03, 0x0a, 0x09, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x09, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x09, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0f, 0x2e,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x12,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x09, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x11, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x10, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0a,
	0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x0d, 0x2e, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x09, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0d, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x11, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x27, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x09, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x26, 0x0a, 0x0f, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x09, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2f, 0x67, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_GodQQ_CloudStore_protocol_protocol_proto_rawDescOnce sync.Once
	file_GodQQ_CloudStore_protocol_protocol_proto_rawDescData = file_GodQQ_CloudStore_protocol_protocol_proto_rawDesc
)

func file_GodQQ_CloudStore_protocol_protocol_proto_rawDescGZIP() []byte {
	file_GodQQ_CloudStore_protocol_protocol_proto_rawDescOnce.Do(func() {
		file_GodQQ_CloudStore_protocol_protocol_proto_rawDescData = protoimpl.X.CompressGZIP(file_GodQQ_CloudStore_protocol_protocol_proto_rawDescData)
	})
	return file_GodQQ_CloudStore_protocol_protocol_proto_rawDescData
}

var file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_GodQQ_CloudStore_protocol_protocol_proto_goTypes = []interface{}{
	(*UserInfo)(nil),            // 0: UserInfo
	(*FileInfo)(nil),            // 1: FileInfo
	(*FileList)(nil),            // 2: FileList
	(*UploadFileInfo)(nil),      // 3: UploadFileInfo
	(*UploadFileInfoRsp)(nil),   // 4: UploadFileInfoRsp
	(*DownloadFileInfo)(nil),    // 5: DownloadFileInfo
	(*DownloadFileInfoRsp)(nil), // 6: DownloadFileInfoRsp
	(*CompleteInfo)(nil),        // 7: CompleteInfo
	(*Empty)(nil),               // 8: Empty
	(*UploadedFileList)(nil),    // 9: UploadedFileList
	(*ShareFile)(nil),           // 10: ShareFile
	(*ShareFileRsp)(nil),        // 11: ShareFileRsp
	(*ShareListRsp)(nil),        // 12: ShareListRsp
	(*ShareFileInfo)(nil),       // 13: ShareFileInfo
	(*ShareFileInfoRsp)(nil),    // 14: ShareFileInfoRsp
}
var file_GodQQ_CloudStore_protocol_protocol_proto_depIdxs = []int32{
	0,  // 0: FilesInfo.GetUploadingFileList:input_type -> UserInfo
	3,  // 1: FilesInfo.RequestUploadFile:input_type -> UploadFileInfo
	7,  // 2: FilesInfo.UploadFileComplete:input_type -> CompleteInfo
	0,  // 3: FilesInfo.GetUploadedFileList:input_type -> UserInfo
	10, // 4: FilesInfo.RequestShareFile:input_type -> ShareFile
	0,  // 5: FilesInfo.GetShareList:input_type -> UserInfo
	13, // 6: FilesInfo.GetShareFileInfo:input_type -> ShareFileInfo
	1,  // 7: FilesInfo.DeleteUploadFile:input_type -> FileInfo
	1,  // 8: FilesInfo.DeleteShareFile:input_type -> FileInfo
	2,  // 9: FilesInfo.GetUploadingFileList:output_type -> FileList
	4,  // 10: FilesInfo.RequestUploadFile:output_type -> UploadFileInfoRsp
	8,  // 11: FilesInfo.UploadFileComplete:output_type -> Empty
	9,  // 12: FilesInfo.GetUploadedFileList:output_type -> UploadedFileList
	11, // 13: FilesInfo.RequestShareFile:output_type -> ShareFileRsp
	12, // 14: FilesInfo.GetShareList:output_type -> ShareListRsp
	14, // 15: FilesInfo.GetShareFileInfo:output_type -> ShareFileInfoRsp
	8,  // 16: FilesInfo.DeleteUploadFile:output_type -> Empty
	8,  // 17: FilesInfo.DeleteShareFile:output_type -> Empty
	9,  // [9:18] is the sub-list for method output_type
	0,  // [0:9] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_GodQQ_CloudStore_protocol_protocol_proto_init() }
func file_GodQQ_CloudStore_protocol_protocol_proto_init() {
	if File_GodQQ_CloudStore_protocol_protocol_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadedFileList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFileRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFileInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GodQQ_CloudStore_protocol_protocol_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_GodQQ_CloudStore_protocol_protocol_proto_goTypes,
		DependencyIndexes: file_GodQQ_CloudStore_protocol_protocol_proto_depIdxs,
		MessageInfos:      file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes,
	}.Build()
	File_GodQQ_CloudStore_protocol_protocol_proto = out.File
	file_GodQQ_CloudStore_protocol_protocol_proto_rawDesc = nil
	file_GodQQ_CloudStore_protocol_protocol_proto_goTypes = nil
	file_GodQQ_CloudStore_protocol_protocol_proto_depIdxs = nil
}
