// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.28.3
// source: GodQQ/CloudStore/protocol/protocol.proto

package gRPCProto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID uint32 `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_GodQQ_CloudStore_protocol_protocol_proto_rawDescGZIP(), []int{0}
}

func (x *UserInfo) GetUID() uint32 {
	if x != nil {
		return x.UID
	}
	return 0
}

type FileList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadingFilesID []uint64 `protobuf:"varint,1,rep,packed,name=UploadingFilesID,proto3" json:"UploadingFilesID,omitempty"` //上传的文件ID
	UploadingChunks  []uint64 `protobuf:"varint,2,rep,packed,name=UploadingChunks,proto3" json:"UploadingChunks,omitempty"`   //上传的文件区块
}

func (x *FileList) Reset() {
	*x = FileList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileList) ProtoMessage() {}

func (x *FileList) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileList.ProtoReflect.Descriptor instead.
func (*FileList) Descriptor() ([]byte, []int) {
	return file_GodQQ_CloudStore_protocol_protocol_proto_rawDescGZIP(), []int{1}
}

func (x *FileList) GetUploadingFilesID() []uint64 {
	if x != nil {
		return x.UploadingFilesID
	}
	return nil
}

func (x *FileList) GetUploadingChunks() []uint64 {
	if x != nil {
		return x.UploadingChunks
	}
	return nil
}

// 上传的文件的信息
type UploadFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID      uint32 `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`          //上传者的UID
	FileName string `protobuf:"bytes,2,opt,name=FileName,proto3" json:"FileName,omitempty"` //上传的文件名称
	MD5      string `protobuf:"bytes,3,opt,name=MD5,proto3" json:"MD5,omitempty"`           //上传的文件的MD5值
	FileID   uint64 `protobuf:"varint,5,opt,name=FileID,proto3" json:"FileID,omitempty"`    //文件的ID，用于判断是不是续传
}

func (x *UploadFileInfo) Reset() {
	*x = UploadFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileInfo) ProtoMessage() {}

func (x *UploadFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileInfo.ProtoReflect.Descriptor instead.
func (*UploadFileInfo) Descriptor() ([]byte, []int) {
	return file_GodQQ_CloudStore_protocol_protocol_proto_rawDescGZIP(), []int{2}
}

func (x *UploadFileInfo) GetUID() uint32 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *UploadFileInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadFileInfo) GetMD5() string {
	if x != nil {
		return x.MD5
	}
	return ""
}

func (x *UploadFileInfo) GetFileID() uint64 {
	if x != nil {
		return x.FileID
	}
	return 0
}

// 上传文件的请求同意后返回的文件信息
type UploadFileInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileID  uint64 `protobuf:"varint,1,opt,name=FileID,proto3" json:"FileID,omitempty"`
	ChunkID uint64 `protobuf:"varint,4,opt,name=ChunkID,proto3" json:"ChunkID,omitempty"` //给定的上传位置
}

func (x *UploadFileInfoRsp) Reset() {
	*x = UploadFileInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileInfoRsp) ProtoMessage() {}

func (x *UploadFileInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileInfoRsp.ProtoReflect.Descriptor instead.
func (*UploadFileInfoRsp) Descriptor() ([]byte, []int) {
	return file_GodQQ_CloudStore_protocol_protocol_proto_rawDescGZIP(), []int{3}
}

func (x *UploadFileInfoRsp) GetFileID() uint64 {
	if x != nil {
		return x.FileID
	}
	return 0
}

func (x *UploadFileInfoRsp) GetChunkID() uint64 {
	if x != nil {
		return x.ChunkID
	}
	return 0
}

// 下载文件的信息
type DownloadFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileID  uint64 `protobuf:"varint,1,opt,name=FileID,proto3" json:"FileID,omitempty"`
	ChunkID uint64 `protobuf:"varint,2,opt,name=ChunkID,proto3" json:"ChunkID,omitempty"` //给定的下载的位置
}

func (x *DownloadFileInfo) Reset() {
	*x = DownloadFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileInfo) ProtoMessage() {}

func (x *DownloadFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileInfo.ProtoReflect.Descriptor instead.
func (*DownloadFileInfo) Descriptor() ([]byte, []int) {
	return file_GodQQ_CloudStore_protocol_protocol_proto_rawDescGZIP(), []int{4}
}

func (x *DownloadFileInfo) GetFileID() uint64 {
	if x != nil {
		return x.FileID
	}
	return 0
}

func (x *DownloadFileInfo) GetChunkID() uint64 {
	if x != nil {
		return x.ChunkID
	}
	return 0
}

// 下载文件的请求同意后返回的文件信息/
type DownloadFileInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MD5     string `protobuf:"bytes,1,opt,name=MD5,proto3" json:"MD5,omitempty"`
	FileLen uint64 `protobuf:"varint,2,opt,name=FileLen,proto3" json:"FileLen,omitempty"`
}

func (x *DownloadFileInfoRsp) Reset() {
	*x = DownloadFileInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileInfoRsp) ProtoMessage() {}

func (x *DownloadFileInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileInfoRsp.ProtoReflect.Descriptor instead.
func (*DownloadFileInfoRsp) Descriptor() ([]byte, []int) {
	return file_GodQQ_CloudStore_protocol_protocol_proto_rawDescGZIP(), []int{5}
}

func (x *DownloadFileInfoRsp) GetMD5() string {
	if x != nil {
		return x.MD5
	}
	return ""
}

func (x *DownloadFileInfoRsp) GetFileLen() uint64 {
	if x != nil {
		return x.FileLen
	}
	return 0
}

// 上传文件的完成通知
type CompleteInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID      uint32 `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
	FileID   uint64 `protobuf:"varint,2,opt,name=FileID,proto3" json:"FileID,omitempty"`
	Complete uint32 `protobuf:"varint,3,opt,name=complete,proto3" json:"complete,omitempty"` //1为暂停，2为终止，3为完成
}

func (x *CompleteInfo) Reset() {
	*x = CompleteInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteInfo) ProtoMessage() {}

func (x *CompleteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteInfo.ProtoReflect.Descriptor instead.
func (*CompleteInfo) Descriptor() ([]byte, []int) {
	return file_GodQQ_CloudStore_protocol_protocol_proto_rawDescGZIP(), []int{6}
}

func (x *CompleteInfo) GetUID() uint32 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *CompleteInfo) GetFileID() uint64 {
	if x != nil {
		return x.FileID
	}
	return 0
}

func (x *CompleteInfo) GetComplete() uint32 {
	if x != nil {
		return x.Complete
	}
	return 0
}

// 空
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_GodQQ_CloudStore_protocol_protocol_proto_rawDescGZIP(), []int{7}
}

var File_GodQQ_CloudStore_protocol_protocol_proto protoreflect.FileDescriptor

var file_GodQQ_CloudStore_protocol_protocol_proto_rawDesc = []byte{
	0x0a, 0x28, 0x47, 0x6f, 0x64, 0x51, 0x51, 0x2f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1c, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x55, 0x49, 0x44, 0x22, 0x60, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x44, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x10,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x44,
	0x12, 0x28, 0x0a, 0x0f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0f, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x22, 0x68, 0x0a, 0x0e, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03,
	0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x44,
	0x35, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x44, 0x35, 0x12, 0x16, 0x0a, 0x06,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x44, 0x22, 0x45, 0x0a, 0x11, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x44, 0x22, 0x44, 0x0a, 0x10, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x49,
	0x44, 0x22, 0x41, 0x0a, 0x13, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x44, 0x35, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x44, 0x35, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x69,
	0x6c, 0x65, 0x4c, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x46, 0x69, 0x6c,
	0x65, 0x4c, 0x65, 0x6e, 0x22, 0x54, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x32, 0xe8, 0x01, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x2e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x09, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x09, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x00, 0x12, 0x3a, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0f, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x12, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x13, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x11, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x14, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x2d, 0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x0c,
	0x5a, 0x0a, 0x2f, 0x67, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_GodQQ_CloudStore_protocol_protocol_proto_rawDescOnce sync.Once
	file_GodQQ_CloudStore_protocol_protocol_proto_rawDescData = file_GodQQ_CloudStore_protocol_protocol_proto_rawDesc
)

func file_GodQQ_CloudStore_protocol_protocol_proto_rawDescGZIP() []byte {
	file_GodQQ_CloudStore_protocol_protocol_proto_rawDescOnce.Do(func() {
		file_GodQQ_CloudStore_protocol_protocol_proto_rawDescData = protoimpl.X.CompressGZIP(file_GodQQ_CloudStore_protocol_protocol_proto_rawDescData)
	})
	return file_GodQQ_CloudStore_protocol_protocol_proto_rawDescData
}

var file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_GodQQ_CloudStore_protocol_protocol_proto_goTypes = []interface{}{
	(*UserInfo)(nil),            // 0: UserInfo
	(*FileList)(nil),            // 1: FileList
	(*UploadFileInfo)(nil),      // 2: UploadFileInfo
	(*UploadFileInfoRsp)(nil),   // 3: UploadFileInfoRsp
	(*DownloadFileInfo)(nil),    // 4: DownloadFileInfo
	(*DownloadFileInfoRsp)(nil), // 5: DownloadFileInfoRsp
	(*CompleteInfo)(nil),        // 6: CompleteInfo
	(*Empty)(nil),               // 7: Empty
}
var file_GodQQ_CloudStore_protocol_protocol_proto_depIdxs = []int32{
	0, // 0: FilesInfo.GetUploadingFileList:input_type -> UserInfo
	2, // 1: FilesInfo.RequestUploadFile:input_type -> UploadFileInfo
	4, // 2: FilesInfo.RequestDownloadFile:input_type -> DownloadFileInfo
	6, // 3: FilesInfo.UploadFileComplete:input_type -> CompleteInfo
	1, // 4: FilesInfo.GetUploadingFileList:output_type -> FileList
	3, // 5: FilesInfo.RequestUploadFile:output_type -> UploadFileInfoRsp
	5, // 6: FilesInfo.RequestDownloadFile:output_type -> DownloadFileInfoRsp
	7, // 7: FilesInfo.UploadFileComplete:output_type -> Empty
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_GodQQ_CloudStore_protocol_protocol_proto_init() }
func file_GodQQ_CloudStore_protocol_protocol_proto_init() {
	if File_GodQQ_CloudStore_protocol_protocol_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GodQQ_CloudStore_protocol_protocol_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_GodQQ_CloudStore_protocol_protocol_proto_goTypes,
		DependencyIndexes: file_GodQQ_CloudStore_protocol_protocol_proto_depIdxs,
		MessageInfos:      file_GodQQ_CloudStore_protocol_protocol_proto_msgTypes,
	}.Build()
	File_GodQQ_CloudStore_protocol_protocol_proto = out.File
	file_GodQQ_CloudStore_protocol_protocol_proto_rawDesc = nil
	file_GodQQ_CloudStore_protocol_protocol_proto_goTypes = nil
	file_GodQQ_CloudStore_protocol_protocol_proto_depIdxs = nil
}
