// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.28.3
// source: GodQQ/protocol/GodQQ.proto

package msg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrToClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Succ     bool   `protobuf:"varint,1,opt,name=succ,proto3" json:"succ,omitempty"`
	ErrorMsg string `protobuf:"bytes,2,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	// Types that are assignable to Info:
	//
	//	*ErrToClient_Uid
	Info isErrToClient_Info `protobuf_oneof:"info"`
}

func (x *ErrToClient) Reset() {
	*x = ErrToClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_protocol_GodQQ_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrToClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrToClient) ProtoMessage() {}

func (x *ErrToClient) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_protocol_GodQQ_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrToClient.ProtoReflect.Descriptor instead.
func (*ErrToClient) Descriptor() ([]byte, []int) {
	return file_GodQQ_protocol_GodQQ_proto_rawDescGZIP(), []int{0}
}

func (x *ErrToClient) GetSucc() bool {
	if x != nil {
		return x.Succ
	}
	return false
}

func (x *ErrToClient) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (m *ErrToClient) GetInfo() isErrToClient_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (x *ErrToClient) GetUid() uint32 {
	if x, ok := x.GetInfo().(*ErrToClient_Uid); ok {
		return x.Uid
	}
	return 0
}

type isErrToClient_Info interface {
	isErrToClient_Info()
}

type ErrToClient_Uid struct {
	Uid uint32 `protobuf:"varint,3,opt,name=uid,proto3,oneof"`
}

func (*ErrToClient_Uid) isErrToClient_Info() {}

// 当用户上线或下线时进行广播，注册到客户端在线列表中
type OnOrOffLineMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Type     bool   `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *OnOrOffLineMsg) Reset() {
	*x = OnOrOffLineMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_protocol_GodQQ_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnOrOffLineMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnOrOffLineMsg) ProtoMessage() {}

func (x *OnOrOffLineMsg) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_protocol_GodQQ_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnOrOffLineMsg.ProtoReflect.Descriptor instead.
func (*OnOrOffLineMsg) Descriptor() ([]byte, []int) {
	return file_GodQQ_protocol_GodQQ_proto_rawDescGZIP(), []int{1}
}

func (x *OnOrOffLineMsg) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *OnOrOffLineMsg) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *OnOrOffLineMsg) GetType() bool {
	if x != nil {
		return x.Type
	}
	return false
}

type LoginFromClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserEmail string `protobuf:"bytes,1,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	UserPwd   string `protobuf:"bytes,2,opt,name=user_pwd,json=userPwd,proto3" json:"user_pwd,omitempty"`
}

func (x *LoginFromClient) Reset() {
	*x = LoginFromClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_protocol_GodQQ_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginFromClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginFromClient) ProtoMessage() {}

func (x *LoginFromClient) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_protocol_GodQQ_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginFromClient.ProtoReflect.Descriptor instead.
func (*LoginFromClient) Descriptor() ([]byte, []int) {
	return file_GodQQ_protocol_GodQQ_proto_rawDescGZIP(), []int{2}
}

func (x *LoginFromClient) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *LoginFromClient) GetUserPwd() string {
	if x != nil {
		return x.UserPwd
	}
	return ""
}

// 需要发送的消息
type MessageToClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                              //发送者的uid
	TargetUid uint32 `protobuf:"varint,2,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"` //如果是私聊消息，那么发送目标的uid
	Msg       string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`                               //发送的信息
	Time      string `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`                             //发送的时间
}

func (x *MessageToClient) Reset() {
	*x = MessageToClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_protocol_GodQQ_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageToClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageToClient) ProtoMessage() {}

func (x *MessageToClient) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_protocol_GodQQ_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageToClient.ProtoReflect.Descriptor instead.
func (*MessageToClient) Descriptor() ([]byte, []int) {
	return file_GodQQ_protocol_GodQQ_proto_rawDescGZIP(), []int{3}
}

func (x *MessageToClient) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *MessageToClient) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

func (x *MessageToClient) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MessageToClient) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

// 由客户端发送的消息
type MessageFromClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`        //如果是私聊消息，那么需要发送的uid
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"` //发送的内容
	Type    uint32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`      //消息的类型，1则是广播消息，2则是私聊消息
}

func (x *MessageFromClient) Reset() {
	*x = MessageFromClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_protocol_GodQQ_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageFromClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageFromClient) ProtoMessage() {}

func (x *MessageFromClient) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_protocol_GodQQ_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageFromClient.ProtoReflect.Descriptor instead.
func (*MessageFromClient) Descriptor() ([]byte, []int) {
	return file_GodQQ_protocol_GodQQ_proto_rawDescGZIP(), []int{4}
}

func (x *MessageFromClient) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *MessageFromClient) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MessageFromClient) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type Register struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName  string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	UserPwd   string `protobuf:"bytes,2,opt,name=user_pwd,json=userPwd,proto3" json:"user_pwd,omitempty"`
	UserEmail string `protobuf:"bytes,3,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	Code      string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *Register) Reset() {
	*x = Register{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_protocol_GodQQ_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Register) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Register) ProtoMessage() {}

func (x *Register) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_protocol_GodQQ_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Register.ProtoReflect.Descriptor instead.
func (*Register) Descriptor() ([]byte, []int) {
	return file_GodQQ_protocol_GodQQ_proto_rawDescGZIP(), []int{5}
}

func (x *Register) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Register) GetUserPwd() string {
	if x != nil {
		return x.UserPwd
	}
	return ""
}

func (x *Register) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *Register) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// 由客户端进行查询，服务器返回查询结果
type Inquiry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"` //进行查询的类型,1为查询所有在线用户，2为查询给定uid的用户是否在线
	// Types that are assignable to Info:
	//
	//	*Inquiry_Uid
	Info   isInquiry_Info `protobuf_oneof:"info"`
	Result bool           `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"` //返回的查询结果
}

func (x *Inquiry) Reset() {
	*x = Inquiry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_protocol_GodQQ_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Inquiry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inquiry) ProtoMessage() {}

func (x *Inquiry) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_protocol_GodQQ_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Inquiry.ProtoReflect.Descriptor instead.
func (*Inquiry) Descriptor() ([]byte, []int) {
	return file_GodQQ_protocol_GodQQ_proto_rawDescGZIP(), []int{6}
}

func (x *Inquiry) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (m *Inquiry) GetInfo() isInquiry_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (x *Inquiry) GetUid() uint32 {
	if x, ok := x.GetInfo().(*Inquiry_Uid); ok {
		return x.Uid
	}
	return 0
}

func (x *Inquiry) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type isInquiry_Info interface {
	isInquiry_Info()
}

type Inquiry_Uid struct {
	Uid uint32 `protobuf:"varint,2,opt,name=uid,proto3,oneof"` //查询对应uid的用户
}

func (*Inquiry_Uid) isInquiry_Info() {}

// 向客户端发送所有在线的用户
type OnlineUsers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  []uint32 `protobuf:"varint,1,rep,packed,name=uid,proto3" json:"uid,omitempty"` //用户的uid列表
	Name []string `protobuf:"bytes,2,rep,name=name,proto3" json:"name,omitempty"`       //用户的昵称
}

func (x *OnlineUsers) Reset() {
	*x = OnlineUsers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodQQ_protocol_GodQQ_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineUsers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineUsers) ProtoMessage() {}

func (x *OnlineUsers) ProtoReflect() protoreflect.Message {
	mi := &file_GodQQ_protocol_GodQQ_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineUsers.ProtoReflect.Descriptor instead.
func (*OnlineUsers) Descriptor() ([]byte, []int) {
	return file_GodQQ_protocol_GodQQ_proto_rawDescGZIP(), []int{7}
}

func (x *OnlineUsers) GetUid() []uint32 {
	if x != nil {
		return x.Uid
	}
	return nil
}

func (x *OnlineUsers) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

var File_GodQQ_protocol_GodQQ_proto protoreflect.FileDescriptor

var file_GodQQ_protocol_GodQQ_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x47, 0x6f, 0x64, 0x51, 0x51, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2f, 0x47, 0x6f, 0x64, 0x51, 0x51, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x59, 0x0a, 0x0b,
	0x45, 0x72, 0x72, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x75, 0x63, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x75, 0x63, 0x63, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x42,
	0x06, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x53, 0x0a, 0x0e, 0x4f, 0x6e, 0x4f, 0x72, 0x4f,
	0x66, 0x66, 0x4c, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4b, 0x0a, 0x0f,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x19,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x77, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x50, 0x77, 0x64, 0x22, 0x68, 0x0a, 0x0f, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x22, 0x53, 0x0a, 0x11, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x75, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x77, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x50, 0x77, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x51, 0x0a, 0x07, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x22, 0x33, 0x0a, 0x0b, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x06, 0x5a, 0x04, 0x2f, 0x6d, 0x73, 0x67, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_GodQQ_protocol_GodQQ_proto_rawDescOnce sync.Once
	file_GodQQ_protocol_GodQQ_proto_rawDescData = file_GodQQ_protocol_GodQQ_proto_rawDesc
)

func file_GodQQ_protocol_GodQQ_proto_rawDescGZIP() []byte {
	file_GodQQ_protocol_GodQQ_proto_rawDescOnce.Do(func() {
		file_GodQQ_protocol_GodQQ_proto_rawDescData = protoimpl.X.CompressGZIP(file_GodQQ_protocol_GodQQ_proto_rawDescData)
	})
	return file_GodQQ_protocol_GodQQ_proto_rawDescData
}

var file_GodQQ_protocol_GodQQ_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_GodQQ_protocol_GodQQ_proto_goTypes = []interface{}{
	(*ErrToClient)(nil),       // 0: ErrToClient
	(*OnOrOffLineMsg)(nil),    // 1: OnOrOffLineMsg
	(*LoginFromClient)(nil),   // 2: LoginFromClient
	(*MessageToClient)(nil),   // 3: MessageToClient
	(*MessageFromClient)(nil), // 4: MessageFromClient
	(*Register)(nil),          // 5: Register
	(*Inquiry)(nil),           // 6: Inquiry
	(*OnlineUsers)(nil),       // 7: OnlineUsers
}
var file_GodQQ_protocol_GodQQ_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_GodQQ_protocol_GodQQ_proto_init() }
func file_GodQQ_protocol_GodQQ_proto_init() {
	if File_GodQQ_protocol_GodQQ_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_GodQQ_protocol_GodQQ_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrToClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_protocol_GodQQ_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnOrOffLineMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_protocol_GodQQ_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginFromClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_protocol_GodQQ_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageToClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_protocol_GodQQ_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageFromClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_protocol_GodQQ_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Register); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_protocol_GodQQ_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Inquiry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodQQ_protocol_GodQQ_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineUsers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_GodQQ_protocol_GodQQ_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ErrToClient_Uid)(nil),
	}
	file_GodQQ_protocol_GodQQ_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Inquiry_Uid)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GodQQ_protocol_GodQQ_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GodQQ_protocol_GodQQ_proto_goTypes,
		DependencyIndexes: file_GodQQ_protocol_GodQQ_proto_depIdxs,
		MessageInfos:      file_GodQQ_protocol_GodQQ_proto_msgTypes,
	}.Build()
	File_GodQQ_protocol_GodQQ_proto = out.File
	file_GodQQ_protocol_GodQQ_proto_rawDesc = nil
	file_GodQQ_protocol_GodQQ_proto_goTypes = nil
	file_GodQQ_protocol_GodQQ_proto_depIdxs = nil
}
